// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BotResponse.proto

#ifndef PROTOBUF_BotResponse_2eproto__INCLUDED
#define PROTOBUF_BotResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_BotResponse_2eproto();
void protobuf_AssignDesc_BotResponse_2eproto();
void protobuf_ShutdownFile_BotResponse_2eproto();

class BatteryVoltage;
class BotResponse;
class BumperStatus;
class BusResponse;
class IMUData;
class IMUDataElement;
class IMUInitResult;
class Quaternion;

// ===================================================================

class BotResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BotResponse) */ {
 public:
  BotResponse();
  virtual ~BotResponse();

  BotResponse(const BotResponse& from);

  inline BotResponse& operator=(const BotResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotResponse& default_instance();

  enum BodyCase {
    kBusResponse = 1,
    kImuInitResult = 2,
    kImuData = 3,
    kBatteryVoltage = 4,
    kBumperStatus = 5,
    BODY_NOT_SET = 0,
  };

  void Swap(BotResponse* other);

  // implements Message ----------------------------------------------

  inline BotResponse* New() const { return New(NULL); }

  BotResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotResponse& from);
  void MergeFrom(const BotResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BotResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BusResponse bus_response = 1;
  bool has_bus_response() const;
  void clear_bus_response();
  static const int kBusResponseFieldNumber = 1;
  const ::BusResponse& bus_response() const;
  ::BusResponse* mutable_bus_response();
  ::BusResponse* release_bus_response();
  void set_allocated_bus_response(::BusResponse* bus_response);

  // optional .IMUInitResult imu_init_result = 2;
  bool has_imu_init_result() const;
  void clear_imu_init_result();
  static const int kImuInitResultFieldNumber = 2;
  const ::IMUInitResult& imu_init_result() const;
  ::IMUInitResult* mutable_imu_init_result();
  ::IMUInitResult* release_imu_init_result();
  void set_allocated_imu_init_result(::IMUInitResult* imu_init_result);

  // optional .IMUData imu_data = 3;
  bool has_imu_data() const;
  void clear_imu_data();
  static const int kImuDataFieldNumber = 3;
  const ::IMUData& imu_data() const;
  ::IMUData* mutable_imu_data();
  ::IMUData* release_imu_data();
  void set_allocated_imu_data(::IMUData* imu_data);

  // optional .BatteryVoltage battery_voltage = 4;
  bool has_battery_voltage() const;
  void clear_battery_voltage();
  static const int kBatteryVoltageFieldNumber = 4;
  const ::BatteryVoltage& battery_voltage() const;
  ::BatteryVoltage* mutable_battery_voltage();
  ::BatteryVoltage* release_battery_voltage();
  void set_allocated_battery_voltage(::BatteryVoltage* battery_voltage);

  // optional .BumperStatus bumper_status = 5;
  bool has_bumper_status() const;
  void clear_bumper_status();
  static const int kBumperStatusFieldNumber = 5;
  const ::BumperStatus& bumper_status() const;
  ::BumperStatus* mutable_bumper_status();
  ::BumperStatus* release_bumper_status();
  void set_allocated_bumper_status(::BumperStatus* bumper_status);

  BodyCase body_case() const;
  // @@protoc_insertion_point(class_scope:BotResponse)
 private:
  inline void set_has_bus_response();
  inline void set_has_imu_init_result();
  inline void set_has_imu_data();
  inline void set_has_battery_voltage();
  inline void set_has_bumper_status();

  inline bool has_body() const;
  void clear_body();
  inline void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union BodyUnion {
    BodyUnion() {}
    ::BusResponse* bus_response_;
    ::IMUInitResult* imu_init_result_;
    ::IMUData* imu_data_;
    ::BatteryVoltage* battery_voltage_;
    ::BumperStatus* bumper_status_;
  } body_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static BotResponse* default_instance_;
};
// -------------------------------------------------------------------

class BusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BusResponse) */ {
 public:
  BusResponse();
  virtual ~BusResponse();

  BusResponse(const BusResponse& from);

  inline BusResponse& operator=(const BusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusResponse& default_instance();

  void Swap(BusResponse* other);

  // implements Message ----------------------------------------------

  inline BusResponse* New() const { return New(NULL); }

  BusResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusResponse& from);
  void MergeFrom(const BusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bus_id = 1;
  void clear_bus_id();
  static const int kBusIdFieldNumber = 1;
  ::google::protobuf::uint32 bus_id() const;
  void set_bus_id(::google::protobuf::uint32 value);

  // optional uint32 data_len = 2;
  void clear_data_len();
  static const int kDataLenFieldNumber = 2;
  ::google::protobuf::uint32 data_len() const;
  void set_data_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BusResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 bus_id_;
  ::google::protobuf::uint32 data_len_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static BusResponse* default_instance_;
};
// -------------------------------------------------------------------

class IMUInitResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IMUInitResult) */ {
 public:
  IMUInitResult();
  virtual ~IMUInitResult();

  IMUInitResult(const IMUInitResult& from);

  inline IMUInitResult& operator=(const IMUInitResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUInitResult& default_instance();

  void Swap(IMUInitResult* other);

  // implements Message ----------------------------------------------

  inline IMUInitResult* New() const { return New(NULL); }

  IMUInitResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMUInitResult& from);
  void MergeFrom(const IMUInitResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUInitResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 init_result = 1;
  void clear_init_result();
  static const int kInitResultFieldNumber = 1;
  ::google::protobuf::int32 init_result() const;
  void set_init_result(::google::protobuf::int32 value);

  // optional int32 test_result = 2;
  void clear_test_result();
  static const int kTestResultFieldNumber = 2;
  ::google::protobuf::int32 test_result() const;
  void set_test_result(::google::protobuf::int32 value);

  // optional float gyroscope_sensitivity = 3;
  void clear_gyroscope_sensitivity();
  static const int kGyroscopeSensitivityFieldNumber = 3;
  float gyroscope_sensitivity() const;
  void set_gyroscope_sensitivity(float value);

  // optional float accelerometer_sensitivity = 4;
  void clear_accelerometer_sensitivity();
  static const int kAccelerometerSensitivityFieldNumber = 4;
  float accelerometer_sensitivity() const;
  void set_accelerometer_sensitivity(float value);

  // optional float quaternion_sensitivity = 5;
  void clear_quaternion_sensitivity();
  static const int kQuaternionSensitivityFieldNumber = 5;
  float quaternion_sensitivity() const;
  void set_quaternion_sensitivity(float value);

  // @@protoc_insertion_point(class_scope:IMUInitResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 init_result_;
  ::google::protobuf::int32 test_result_;
  float gyroscope_sensitivity_;
  float accelerometer_sensitivity_;
  float quaternion_sensitivity_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static IMUInitResult* default_instance_;
};
// -------------------------------------------------------------------

class IMUDataElement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IMUDataElement) */ {
 public:
  IMUDataElement();
  virtual ~IMUDataElement();

  IMUDataElement(const IMUDataElement& from);

  inline IMUDataElement& operator=(const IMUDataElement& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUDataElement& default_instance();

  void Swap(IMUDataElement* other);

  // implements Message ----------------------------------------------

  inline IMUDataElement* New() const { return New(NULL); }

  IMUDataElement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMUDataElement& from);
  void MergeFrom(const IMUDataElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUDataElement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:IMUDataElement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static IMUDataElement* default_instance_;
};
// -------------------------------------------------------------------

class Quaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Quaternion) */ {
 public:
  Quaternion();
  virtual ~Quaternion();

  Quaternion(const Quaternion& from);

  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quaternion& default_instance();

  void Swap(Quaternion* other);

  // implements Message ----------------------------------------------

  inline Quaternion* New() const { return New(NULL); }

  Quaternion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quaternion& from);
  void MergeFrom(const Quaternion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Quaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 w = 1;
  void clear_w();
  static const int kWFieldNumber = 1;
  ::google::protobuf::int32 w() const;
  void set_w(::google::protobuf::int32 value);

  // optional int32 x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Quaternion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 w_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static Quaternion* default_instance_;
};
// -------------------------------------------------------------------

class IMUData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IMUData) */ {
 public:
  IMUData();
  virtual ~IMUData();

  IMUData(const IMUData& from);

  inline IMUData& operator=(const IMUData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUData& default_instance();

  void Swap(IMUData* other);

  // implements Message ----------------------------------------------

  inline IMUData* New() const { return New(NULL); }

  IMUData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMUData& from);
  void MergeFrom(const IMUData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .IMUDataElement angular_velocity = 1;
  bool has_angular_velocity() const;
  void clear_angular_velocity();
  static const int kAngularVelocityFieldNumber = 1;
  const ::IMUDataElement& angular_velocity() const;
  ::IMUDataElement* mutable_angular_velocity();
  ::IMUDataElement* release_angular_velocity();
  void set_allocated_angular_velocity(::IMUDataElement* angular_velocity);

  // optional .IMUDataElement linear_acceleration = 2;
  bool has_linear_acceleration() const;
  void clear_linear_acceleration();
  static const int kLinearAccelerationFieldNumber = 2;
  const ::IMUDataElement& linear_acceleration() const;
  ::IMUDataElement* mutable_linear_acceleration();
  ::IMUDataElement* release_linear_acceleration();
  void set_allocated_linear_acceleration(::IMUDataElement* linear_acceleration);

  // optional .Quaternion orientation = 3;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 3;
  const ::Quaternion& orientation() const;
  ::Quaternion* mutable_orientation();
  ::Quaternion* release_orientation();
  void set_allocated_orientation(::Quaternion* orientation);

  // @@protoc_insertion_point(class_scope:IMUData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::IMUDataElement* angular_velocity_;
  ::IMUDataElement* linear_acceleration_;
  ::Quaternion* orientation_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static IMUData* default_instance_;
};
// -------------------------------------------------------------------

class BatteryVoltage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BatteryVoltage) */ {
 public:
  BatteryVoltage();
  virtual ~BatteryVoltage();

  BatteryVoltage(const BatteryVoltage& from);

  inline BatteryVoltage& operator=(const BatteryVoltage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatteryVoltage& default_instance();

  void Swap(BatteryVoltage* other);

  // implements Message ----------------------------------------------

  inline BatteryVoltage* New() const { return New(NULL); }

  BatteryVoltage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatteryVoltage& from);
  void MergeFrom(const BatteryVoltage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BatteryVoltage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float voltage = 1;
  void clear_voltage();
  static const int kVoltageFieldNumber = 1;
  float voltage() const;
  void set_voltage(float value);

  // @@protoc_insertion_point(class_scope:BatteryVoltage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float voltage_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static BatteryVoltage* default_instance_;
};
// -------------------------------------------------------------------

class BumperStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BumperStatus) */ {
 public:
  BumperStatus();
  virtual ~BumperStatus();

  BumperStatus(const BumperStatus& from);

  inline BumperStatus& operator=(const BumperStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BumperStatus& default_instance();

  void Swap(BumperStatus* other);

  // implements Message ----------------------------------------------

  inline BumperStatus* New() const { return New(NULL); }

  BumperStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BumperStatus& from);
  void MergeFrom(const BumperStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BumperStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BumperStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotResponse_2eproto();
  friend void protobuf_AssignDesc_BotResponse_2eproto();
  friend void protobuf_ShutdownFile_BotResponse_2eproto();

  void InitAsDefaultInstance();
  static BumperStatus* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BotResponse

// optional .BusResponse bus_response = 1;
inline bool BotResponse::has_bus_response() const {
  return body_case() == kBusResponse;
}
inline void BotResponse::set_has_bus_response() {
  _oneof_case_[0] = kBusResponse;
}
inline void BotResponse::clear_bus_response() {
  if (has_bus_response()) {
    delete body_.bus_response_;
    clear_has_body();
  }
}
inline  const ::BusResponse& BotResponse::bus_response() const {
  // @@protoc_insertion_point(field_get:BotResponse.bus_response)
  return has_bus_response()
      ? *body_.bus_response_
      : ::BusResponse::default_instance();
}
inline ::BusResponse* BotResponse::mutable_bus_response() {
  if (!has_bus_response()) {
    clear_body();
    set_has_bus_response();
    body_.bus_response_ = new ::BusResponse;
  }
  // @@protoc_insertion_point(field_mutable:BotResponse.bus_response)
  return body_.bus_response_;
}
inline ::BusResponse* BotResponse::release_bus_response() {
  // @@protoc_insertion_point(field_release:BotResponse.bus_response)
  if (has_bus_response()) {
    clear_has_body();
    ::BusResponse* temp = body_.bus_response_;
    body_.bus_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotResponse::set_allocated_bus_response(::BusResponse* bus_response) {
  clear_body();
  if (bus_response) {
    set_has_bus_response();
    body_.bus_response_ = bus_response;
  }
  // @@protoc_insertion_point(field_set_allocated:BotResponse.bus_response)
}

// optional .IMUInitResult imu_init_result = 2;
inline bool BotResponse::has_imu_init_result() const {
  return body_case() == kImuInitResult;
}
inline void BotResponse::set_has_imu_init_result() {
  _oneof_case_[0] = kImuInitResult;
}
inline void BotResponse::clear_imu_init_result() {
  if (has_imu_init_result()) {
    delete body_.imu_init_result_;
    clear_has_body();
  }
}
inline  const ::IMUInitResult& BotResponse::imu_init_result() const {
  // @@protoc_insertion_point(field_get:BotResponse.imu_init_result)
  return has_imu_init_result()
      ? *body_.imu_init_result_
      : ::IMUInitResult::default_instance();
}
inline ::IMUInitResult* BotResponse::mutable_imu_init_result() {
  if (!has_imu_init_result()) {
    clear_body();
    set_has_imu_init_result();
    body_.imu_init_result_ = new ::IMUInitResult;
  }
  // @@protoc_insertion_point(field_mutable:BotResponse.imu_init_result)
  return body_.imu_init_result_;
}
inline ::IMUInitResult* BotResponse::release_imu_init_result() {
  // @@protoc_insertion_point(field_release:BotResponse.imu_init_result)
  if (has_imu_init_result()) {
    clear_has_body();
    ::IMUInitResult* temp = body_.imu_init_result_;
    body_.imu_init_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotResponse::set_allocated_imu_init_result(::IMUInitResult* imu_init_result) {
  clear_body();
  if (imu_init_result) {
    set_has_imu_init_result();
    body_.imu_init_result_ = imu_init_result;
  }
  // @@protoc_insertion_point(field_set_allocated:BotResponse.imu_init_result)
}

// optional .IMUData imu_data = 3;
inline bool BotResponse::has_imu_data() const {
  return body_case() == kImuData;
}
inline void BotResponse::set_has_imu_data() {
  _oneof_case_[0] = kImuData;
}
inline void BotResponse::clear_imu_data() {
  if (has_imu_data()) {
    delete body_.imu_data_;
    clear_has_body();
  }
}
inline  const ::IMUData& BotResponse::imu_data() const {
  // @@protoc_insertion_point(field_get:BotResponse.imu_data)
  return has_imu_data()
      ? *body_.imu_data_
      : ::IMUData::default_instance();
}
inline ::IMUData* BotResponse::mutable_imu_data() {
  if (!has_imu_data()) {
    clear_body();
    set_has_imu_data();
    body_.imu_data_ = new ::IMUData;
  }
  // @@protoc_insertion_point(field_mutable:BotResponse.imu_data)
  return body_.imu_data_;
}
inline ::IMUData* BotResponse::release_imu_data() {
  // @@protoc_insertion_point(field_release:BotResponse.imu_data)
  if (has_imu_data()) {
    clear_has_body();
    ::IMUData* temp = body_.imu_data_;
    body_.imu_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotResponse::set_allocated_imu_data(::IMUData* imu_data) {
  clear_body();
  if (imu_data) {
    set_has_imu_data();
    body_.imu_data_ = imu_data;
  }
  // @@protoc_insertion_point(field_set_allocated:BotResponse.imu_data)
}

// optional .BatteryVoltage battery_voltage = 4;
inline bool BotResponse::has_battery_voltage() const {
  return body_case() == kBatteryVoltage;
}
inline void BotResponse::set_has_battery_voltage() {
  _oneof_case_[0] = kBatteryVoltage;
}
inline void BotResponse::clear_battery_voltage() {
  if (has_battery_voltage()) {
    delete body_.battery_voltage_;
    clear_has_body();
  }
}
inline  const ::BatteryVoltage& BotResponse::battery_voltage() const {
  // @@protoc_insertion_point(field_get:BotResponse.battery_voltage)
  return has_battery_voltage()
      ? *body_.battery_voltage_
      : ::BatteryVoltage::default_instance();
}
inline ::BatteryVoltage* BotResponse::mutable_battery_voltage() {
  if (!has_battery_voltage()) {
    clear_body();
    set_has_battery_voltage();
    body_.battery_voltage_ = new ::BatteryVoltage;
  }
  // @@protoc_insertion_point(field_mutable:BotResponse.battery_voltage)
  return body_.battery_voltage_;
}
inline ::BatteryVoltage* BotResponse::release_battery_voltage() {
  // @@protoc_insertion_point(field_release:BotResponse.battery_voltage)
  if (has_battery_voltage()) {
    clear_has_body();
    ::BatteryVoltage* temp = body_.battery_voltage_;
    body_.battery_voltage_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotResponse::set_allocated_battery_voltage(::BatteryVoltage* battery_voltage) {
  clear_body();
  if (battery_voltage) {
    set_has_battery_voltage();
    body_.battery_voltage_ = battery_voltage;
  }
  // @@protoc_insertion_point(field_set_allocated:BotResponse.battery_voltage)
}

// optional .BumperStatus bumper_status = 5;
inline bool BotResponse::has_bumper_status() const {
  return body_case() == kBumperStatus;
}
inline void BotResponse::set_has_bumper_status() {
  _oneof_case_[0] = kBumperStatus;
}
inline void BotResponse::clear_bumper_status() {
  if (has_bumper_status()) {
    delete body_.bumper_status_;
    clear_has_body();
  }
}
inline  const ::BumperStatus& BotResponse::bumper_status() const {
  // @@protoc_insertion_point(field_get:BotResponse.bumper_status)
  return has_bumper_status()
      ? *body_.bumper_status_
      : ::BumperStatus::default_instance();
}
inline ::BumperStatus* BotResponse::mutable_bumper_status() {
  if (!has_bumper_status()) {
    clear_body();
    set_has_bumper_status();
    body_.bumper_status_ = new ::BumperStatus;
  }
  // @@protoc_insertion_point(field_mutable:BotResponse.bumper_status)
  return body_.bumper_status_;
}
inline ::BumperStatus* BotResponse::release_bumper_status() {
  // @@protoc_insertion_point(field_release:BotResponse.bumper_status)
  if (has_bumper_status()) {
    clear_has_body();
    ::BumperStatus* temp = body_.bumper_status_;
    body_.bumper_status_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotResponse::set_allocated_bumper_status(::BumperStatus* bumper_status) {
  clear_body();
  if (bumper_status) {
    set_has_bumper_status();
    body_.bumper_status_ = bumper_status;
  }
  // @@protoc_insertion_point(field_set_allocated:BotResponse.bumper_status)
}

inline bool BotResponse::has_body() const {
  return body_case() != BODY_NOT_SET;
}
inline void BotResponse::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
inline BotResponse::BodyCase BotResponse::body_case() const {
  return BotResponse::BodyCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BusResponse

// optional uint32 bus_id = 1;
inline void BusResponse::clear_bus_id() {
  bus_id_ = 0u;
}
inline ::google::protobuf::uint32 BusResponse::bus_id() const {
  // @@protoc_insertion_point(field_get:BusResponse.bus_id)
  return bus_id_;
}
inline void BusResponse::set_bus_id(::google::protobuf::uint32 value) {
  
  bus_id_ = value;
  // @@protoc_insertion_point(field_set:BusResponse.bus_id)
}

// optional uint32 data_len = 2;
inline void BusResponse::clear_data_len() {
  data_len_ = 0u;
}
inline ::google::protobuf::uint32 BusResponse::data_len() const {
  // @@protoc_insertion_point(field_get:BusResponse.data_len)
  return data_len_;
}
inline void BusResponse::set_data_len(::google::protobuf::uint32 value) {
  
  data_len_ = value;
  // @@protoc_insertion_point(field_set:BusResponse.data_len)
}

// -------------------------------------------------------------------

// IMUInitResult

// optional int32 init_result = 1;
inline void IMUInitResult::clear_init_result() {
  init_result_ = 0;
}
inline ::google::protobuf::int32 IMUInitResult::init_result() const {
  // @@protoc_insertion_point(field_get:IMUInitResult.init_result)
  return init_result_;
}
inline void IMUInitResult::set_init_result(::google::protobuf::int32 value) {
  
  init_result_ = value;
  // @@protoc_insertion_point(field_set:IMUInitResult.init_result)
}

// optional int32 test_result = 2;
inline void IMUInitResult::clear_test_result() {
  test_result_ = 0;
}
inline ::google::protobuf::int32 IMUInitResult::test_result() const {
  // @@protoc_insertion_point(field_get:IMUInitResult.test_result)
  return test_result_;
}
inline void IMUInitResult::set_test_result(::google::protobuf::int32 value) {
  
  test_result_ = value;
  // @@protoc_insertion_point(field_set:IMUInitResult.test_result)
}

// optional float gyroscope_sensitivity = 3;
inline void IMUInitResult::clear_gyroscope_sensitivity() {
  gyroscope_sensitivity_ = 0;
}
inline float IMUInitResult::gyroscope_sensitivity() const {
  // @@protoc_insertion_point(field_get:IMUInitResult.gyroscope_sensitivity)
  return gyroscope_sensitivity_;
}
inline void IMUInitResult::set_gyroscope_sensitivity(float value) {
  
  gyroscope_sensitivity_ = value;
  // @@protoc_insertion_point(field_set:IMUInitResult.gyroscope_sensitivity)
}

// optional float accelerometer_sensitivity = 4;
inline void IMUInitResult::clear_accelerometer_sensitivity() {
  accelerometer_sensitivity_ = 0;
}
inline float IMUInitResult::accelerometer_sensitivity() const {
  // @@protoc_insertion_point(field_get:IMUInitResult.accelerometer_sensitivity)
  return accelerometer_sensitivity_;
}
inline void IMUInitResult::set_accelerometer_sensitivity(float value) {
  
  accelerometer_sensitivity_ = value;
  // @@protoc_insertion_point(field_set:IMUInitResult.accelerometer_sensitivity)
}

// optional float quaternion_sensitivity = 5;
inline void IMUInitResult::clear_quaternion_sensitivity() {
  quaternion_sensitivity_ = 0;
}
inline float IMUInitResult::quaternion_sensitivity() const {
  // @@protoc_insertion_point(field_get:IMUInitResult.quaternion_sensitivity)
  return quaternion_sensitivity_;
}
inline void IMUInitResult::set_quaternion_sensitivity(float value) {
  
  quaternion_sensitivity_ = value;
  // @@protoc_insertion_point(field_set:IMUInitResult.quaternion_sensitivity)
}

// -------------------------------------------------------------------

// IMUDataElement

// optional int32 x = 1;
inline void IMUDataElement::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 IMUDataElement::x() const {
  // @@protoc_insertion_point(field_get:IMUDataElement.x)
  return x_;
}
inline void IMUDataElement::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:IMUDataElement.x)
}

// optional int32 y = 2;
inline void IMUDataElement::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 IMUDataElement::y() const {
  // @@protoc_insertion_point(field_get:IMUDataElement.y)
  return y_;
}
inline void IMUDataElement::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:IMUDataElement.y)
}

// optional int32 z = 3;
inline void IMUDataElement::clear_z() {
  z_ = 0;
}
inline ::google::protobuf::int32 IMUDataElement::z() const {
  // @@protoc_insertion_point(field_get:IMUDataElement.z)
  return z_;
}
inline void IMUDataElement::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:IMUDataElement.z)
}

// -------------------------------------------------------------------

// Quaternion

// optional int32 w = 1;
inline void Quaternion::clear_w() {
  w_ = 0;
}
inline ::google::protobuf::int32 Quaternion::w() const {
  // @@protoc_insertion_point(field_get:Quaternion.w)
  return w_;
}
inline void Quaternion::set_w(::google::protobuf::int32 value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:Quaternion.w)
}

// optional int32 x = 2;
inline void Quaternion::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Quaternion::x() const {
  // @@protoc_insertion_point(field_get:Quaternion.x)
  return x_;
}
inline void Quaternion::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Quaternion.x)
}

// optional int32 y = 3;
inline void Quaternion::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Quaternion::y() const {
  // @@protoc_insertion_point(field_get:Quaternion.y)
  return y_;
}
inline void Quaternion::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Quaternion.y)
}

// optional int32 z = 4;
inline void Quaternion::clear_z() {
  z_ = 0;
}
inline ::google::protobuf::int32 Quaternion::z() const {
  // @@protoc_insertion_point(field_get:Quaternion.z)
  return z_;
}
inline void Quaternion::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Quaternion.z)
}

// -------------------------------------------------------------------

// IMUData

// optional .IMUDataElement angular_velocity = 1;
inline bool IMUData::has_angular_velocity() const {
  return !_is_default_instance_ && angular_velocity_ != NULL;
}
inline void IMUData::clear_angular_velocity() {
  if (GetArenaNoVirtual() == NULL && angular_velocity_ != NULL) delete angular_velocity_;
  angular_velocity_ = NULL;
}
inline const ::IMUDataElement& IMUData::angular_velocity() const {
  // @@protoc_insertion_point(field_get:IMUData.angular_velocity)
  return angular_velocity_ != NULL ? *angular_velocity_ : *default_instance_->angular_velocity_;
}
inline ::IMUDataElement* IMUData::mutable_angular_velocity() {
  
  if (angular_velocity_ == NULL) {
    angular_velocity_ = new ::IMUDataElement;
  }
  // @@protoc_insertion_point(field_mutable:IMUData.angular_velocity)
  return angular_velocity_;
}
inline ::IMUDataElement* IMUData::release_angular_velocity() {
  // @@protoc_insertion_point(field_release:IMUData.angular_velocity)
  
  ::IMUDataElement* temp = angular_velocity_;
  angular_velocity_ = NULL;
  return temp;
}
inline void IMUData::set_allocated_angular_velocity(::IMUDataElement* angular_velocity) {
  delete angular_velocity_;
  angular_velocity_ = angular_velocity;
  if (angular_velocity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:IMUData.angular_velocity)
}

// optional .IMUDataElement linear_acceleration = 2;
inline bool IMUData::has_linear_acceleration() const {
  return !_is_default_instance_ && linear_acceleration_ != NULL;
}
inline void IMUData::clear_linear_acceleration() {
  if (GetArenaNoVirtual() == NULL && linear_acceleration_ != NULL) delete linear_acceleration_;
  linear_acceleration_ = NULL;
}
inline const ::IMUDataElement& IMUData::linear_acceleration() const {
  // @@protoc_insertion_point(field_get:IMUData.linear_acceleration)
  return linear_acceleration_ != NULL ? *linear_acceleration_ : *default_instance_->linear_acceleration_;
}
inline ::IMUDataElement* IMUData::mutable_linear_acceleration() {
  
  if (linear_acceleration_ == NULL) {
    linear_acceleration_ = new ::IMUDataElement;
  }
  // @@protoc_insertion_point(field_mutable:IMUData.linear_acceleration)
  return linear_acceleration_;
}
inline ::IMUDataElement* IMUData::release_linear_acceleration() {
  // @@protoc_insertion_point(field_release:IMUData.linear_acceleration)
  
  ::IMUDataElement* temp = linear_acceleration_;
  linear_acceleration_ = NULL;
  return temp;
}
inline void IMUData::set_allocated_linear_acceleration(::IMUDataElement* linear_acceleration) {
  delete linear_acceleration_;
  linear_acceleration_ = linear_acceleration;
  if (linear_acceleration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:IMUData.linear_acceleration)
}

// optional .Quaternion orientation = 3;
inline bool IMUData::has_orientation() const {
  return !_is_default_instance_ && orientation_ != NULL;
}
inline void IMUData::clear_orientation() {
  if (GetArenaNoVirtual() == NULL && orientation_ != NULL) delete orientation_;
  orientation_ = NULL;
}
inline const ::Quaternion& IMUData::orientation() const {
  // @@protoc_insertion_point(field_get:IMUData.orientation)
  return orientation_ != NULL ? *orientation_ : *default_instance_->orientation_;
}
inline ::Quaternion* IMUData::mutable_orientation() {
  
  if (orientation_ == NULL) {
    orientation_ = new ::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:IMUData.orientation)
  return orientation_;
}
inline ::Quaternion* IMUData::release_orientation() {
  // @@protoc_insertion_point(field_release:IMUData.orientation)
  
  ::Quaternion* temp = orientation_;
  orientation_ = NULL;
  return temp;
}
inline void IMUData::set_allocated_orientation(::Quaternion* orientation) {
  delete orientation_;
  orientation_ = orientation;
  if (orientation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:IMUData.orientation)
}

// -------------------------------------------------------------------

// BatteryVoltage

// optional float voltage = 1;
inline void BatteryVoltage::clear_voltage() {
  voltage_ = 0;
}
inline float BatteryVoltage::voltage() const {
  // @@protoc_insertion_point(field_get:BatteryVoltage.voltage)
  return voltage_;
}
inline void BatteryVoltage::set_voltage(float value) {
  
  voltage_ = value;
  // @@protoc_insertion_point(field_set:BatteryVoltage.voltage)
}

// -------------------------------------------------------------------

// BumperStatus

// optional uint32 status = 1;
inline void BumperStatus::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 BumperStatus::status() const {
  // @@protoc_insertion_point(field_get:BumperStatus.status)
  return status_;
}
inline void BumperStatus::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:BumperStatus.status)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BotResponse_2eproto__INCLUDED
