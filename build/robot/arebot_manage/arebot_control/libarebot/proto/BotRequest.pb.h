// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BotRequest.proto

#ifndef PROTOBUF_BotRequest_2eproto__INCLUDED
#define PROTOBUF_BotRequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_BotRequest_2eproto();
void protobuf_AssignDesc_BotRequest_2eproto();
void protobuf_ShutdownFile_BotRequest_2eproto();

class BotRequest;
class BusBaudrate;
class BusRequest;
class IMUInit;
class OLEDWrite;

enum BusBaudrate_Parity {
  BusBaudrate_Parity_PAR_8E1 = 0,
  BusBaudrate_Parity_PAR_8N2 = 1,
  BusBaudrate_Parity_PAR_8N1 = 3,
  BusBaudrate_Parity_BusBaudrate_Parity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BusBaudrate_Parity_BusBaudrate_Parity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BusBaudrate_Parity_IsValid(int value);
const BusBaudrate_Parity BusBaudrate_Parity_Parity_MIN = BusBaudrate_Parity_PAR_8E1;
const BusBaudrate_Parity BusBaudrate_Parity_Parity_MAX = BusBaudrate_Parity_PAR_8N1;
const int BusBaudrate_Parity_Parity_ARRAYSIZE = BusBaudrate_Parity_Parity_MAX + 1;

const ::google::protobuf::EnumDescriptor* BusBaudrate_Parity_descriptor();
inline const ::std::string& BusBaudrate_Parity_Name(BusBaudrate_Parity value) {
  return ::google::protobuf::internal::NameOfEnum(
    BusBaudrate_Parity_descriptor(), value);
}
inline bool BusBaudrate_Parity_Parse(
    const ::std::string& name, BusBaudrate_Parity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BusBaudrate_Parity>(
    BusBaudrate_Parity_descriptor(), name, value);
}
// ===================================================================

class BotRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BotRequest) */ {
 public:
  BotRequest();
  virtual ~BotRequest();

  BotRequest(const BotRequest& from);

  inline BotRequest& operator=(const BotRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BotRequest& default_instance();

  enum BodyCase {
    kImuInit = 1,
    kBusRequest = 2,
    kBusBaudrate = 3,
    kOledWrite = 4,
    BODY_NOT_SET = 0,
  };

  void Swap(BotRequest* other);

  // implements Message ----------------------------------------------

  inline BotRequest* New() const { return New(NULL); }

  BotRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BotRequest& from);
  void MergeFrom(const BotRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BotRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .IMUInit imu_init = 1;
  bool has_imu_init() const;
  void clear_imu_init();
  static const int kImuInitFieldNumber = 1;
  const ::IMUInit& imu_init() const;
  ::IMUInit* mutable_imu_init();
  ::IMUInit* release_imu_init();
  void set_allocated_imu_init(::IMUInit* imu_init);

  // optional .BusRequest bus_request = 2;
  bool has_bus_request() const;
  void clear_bus_request();
  static const int kBusRequestFieldNumber = 2;
  const ::BusRequest& bus_request() const;
  ::BusRequest* mutable_bus_request();
  ::BusRequest* release_bus_request();
  void set_allocated_bus_request(::BusRequest* bus_request);

  // optional .BusBaudrate bus_baudrate = 3;
  bool has_bus_baudrate() const;
  void clear_bus_baudrate();
  static const int kBusBaudrateFieldNumber = 3;
  const ::BusBaudrate& bus_baudrate() const;
  ::BusBaudrate* mutable_bus_baudrate();
  ::BusBaudrate* release_bus_baudrate();
  void set_allocated_bus_baudrate(::BusBaudrate* bus_baudrate);

  // optional .OLEDWrite oled_write = 4;
  bool has_oled_write() const;
  void clear_oled_write();
  static const int kOledWriteFieldNumber = 4;
  const ::OLEDWrite& oled_write() const;
  ::OLEDWrite* mutable_oled_write();
  ::OLEDWrite* release_oled_write();
  void set_allocated_oled_write(::OLEDWrite* oled_write);

  BodyCase body_case() const;
  // @@protoc_insertion_point(class_scope:BotRequest)
 private:
  inline void set_has_imu_init();
  inline void set_has_bus_request();
  inline void set_has_bus_baudrate();
  inline void set_has_oled_write();

  inline bool has_body() const;
  void clear_body();
  inline void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union BodyUnion {
    BodyUnion() {}
    ::IMUInit* imu_init_;
    ::BusRequest* bus_request_;
    ::BusBaudrate* bus_baudrate_;
    ::OLEDWrite* oled_write_;
  } body_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_BotRequest_2eproto();
  friend void protobuf_AssignDesc_BotRequest_2eproto();
  friend void protobuf_ShutdownFile_BotRequest_2eproto();

  void InitAsDefaultInstance();
  static BotRequest* default_instance_;
};
// -------------------------------------------------------------------

class IMUInit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IMUInit) */ {
 public:
  IMUInit();
  virtual ~IMUInit();

  IMUInit(const IMUInit& from);

  inline IMUInit& operator=(const IMUInit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMUInit& default_instance();

  void Swap(IMUInit* other);

  // implements Message ----------------------------------------------

  inline IMUInit* New() const { return New(NULL); }

  IMUInit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMUInit& from);
  void MergeFrom(const IMUInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool self_test = 1;
  void clear_self_test();
  static const int kSelfTestFieldNumber = 1;
  bool self_test() const;
  void set_self_test(bool value);

  // optional uint32 report_frequency = 2;
  void clear_report_frequency();
  static const int kReportFrequencyFieldNumber = 2;
  ::google::protobuf::uint32 report_frequency() const;
  void set_report_frequency(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IMUInit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool self_test_;
  ::google::protobuf::uint32 report_frequency_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotRequest_2eproto();
  friend void protobuf_AssignDesc_BotRequest_2eproto();
  friend void protobuf_ShutdownFile_BotRequest_2eproto();

  void InitAsDefaultInstance();
  static IMUInit* default_instance_;
};
// -------------------------------------------------------------------

class BusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BusRequest) */ {
 public:
  BusRequest();
  virtual ~BusRequest();

  BusRequest(const BusRequest& from);

  inline BusRequest& operator=(const BusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusRequest& default_instance();

  void Swap(BusRequest* other);

  // implements Message ----------------------------------------------

  inline BusRequest* New() const { return New(NULL); }

  BusRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusRequest& from);
  void MergeFrom(const BusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bus_id = 1;
  void clear_bus_id();
  static const int kBusIdFieldNumber = 1;
  ::google::protobuf::uint32 bus_id() const;
  void set_bus_id(::google::protobuf::uint32 value);

  // optional uint32 tx_len = 2;
  void clear_tx_len();
  static const int kTxLenFieldNumber = 2;
  ::google::protobuf::uint32 tx_len() const;
  void set_tx_len(::google::protobuf::uint32 value);

  // optional uint32 rx_len = 3;
  void clear_rx_len();
  static const int kRxLenFieldNumber = 3;
  ::google::protobuf::uint32 rx_len() const;
  void set_rx_len(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 bus_id_;
  ::google::protobuf::uint32 tx_len_;
  ::google::protobuf::uint32 rx_len_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotRequest_2eproto();
  friend void protobuf_AssignDesc_BotRequest_2eproto();
  friend void protobuf_ShutdownFile_BotRequest_2eproto();

  void InitAsDefaultInstance();
  static BusRequest* default_instance_;
};
// -------------------------------------------------------------------

class BusBaudrate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BusBaudrate) */ {
 public:
  BusBaudrate();
  virtual ~BusBaudrate();

  BusBaudrate(const BusBaudrate& from);

  inline BusBaudrate& operator=(const BusBaudrate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BusBaudrate& default_instance();

  void Swap(BusBaudrate* other);

  // implements Message ----------------------------------------------

  inline BusBaudrate* New() const { return New(NULL); }

  BusBaudrate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BusBaudrate& from);
  void MergeFrom(const BusBaudrate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BusBaudrate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BusBaudrate_Parity Parity;
  static const Parity PAR_8E1 =
    BusBaudrate_Parity_PAR_8E1;
  static const Parity PAR_8N2 =
    BusBaudrate_Parity_PAR_8N2;
  static const Parity PAR_8N1 =
    BusBaudrate_Parity_PAR_8N1;
  static inline bool Parity_IsValid(int value) {
    return BusBaudrate_Parity_IsValid(value);
  }
  static const Parity Parity_MIN =
    BusBaudrate_Parity_Parity_MIN;
  static const Parity Parity_MAX =
    BusBaudrate_Parity_Parity_MAX;
  static const int Parity_ARRAYSIZE =
    BusBaudrate_Parity_Parity_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Parity_descriptor() {
    return BusBaudrate_Parity_descriptor();
  }
  static inline const ::std::string& Parity_Name(Parity value) {
    return BusBaudrate_Parity_Name(value);
  }
  static inline bool Parity_Parse(const ::std::string& name,
      Parity* value) {
    return BusBaudrate_Parity_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 bus_id = 1;
  void clear_bus_id();
  static const int kBusIdFieldNumber = 1;
  ::google::protobuf::uint32 bus_id() const;
  void set_bus_id(::google::protobuf::uint32 value);

  // optional uint32 baudrate = 2;
  void clear_baudrate();
  static const int kBaudrateFieldNumber = 2;
  ::google::protobuf::uint32 baudrate() const;
  void set_baudrate(::google::protobuf::uint32 value);

  // optional .BusBaudrate.Parity parity = 3;
  void clear_parity();
  static const int kParityFieldNumber = 3;
  ::BusBaudrate_Parity parity() const;
  void set_parity(::BusBaudrate_Parity value);

  // @@protoc_insertion_point(class_scope:BusBaudrate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 bus_id_;
  ::google::protobuf::uint32 baudrate_;
  int parity_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotRequest_2eproto();
  friend void protobuf_AssignDesc_BotRequest_2eproto();
  friend void protobuf_ShutdownFile_BotRequest_2eproto();

  void InitAsDefaultInstance();
  static BusBaudrate* default_instance_;
};
// -------------------------------------------------------------------

class OLEDWrite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OLEDWrite) */ {
 public:
  OLEDWrite();
  virtual ~OLEDWrite();

  OLEDWrite(const OLEDWrite& from);

  inline OLEDWrite& operator=(const OLEDWrite& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OLEDWrite& default_instance();

  void Swap(OLEDWrite* other);

  // implements Message ----------------------------------------------

  inline OLEDWrite* New() const { return New(NULL); }

  OLEDWrite* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OLEDWrite& from);
  void MergeFrom(const OLEDWrite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OLEDWrite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 page_start = 1;
  void clear_page_start();
  static const int kPageStartFieldNumber = 1;
  ::google::protobuf::uint32 page_start() const;
  void set_page_start(::google::protobuf::uint32 value);

  // optional uint32 page_end = 2;
  void clear_page_end();
  static const int kPageEndFieldNumber = 2;
  ::google::protobuf::uint32 page_end() const;
  void set_page_end(::google::protobuf::uint32 value);

  // optional uint32 col_start = 3;
  void clear_col_start();
  static const int kColStartFieldNumber = 3;
  ::google::protobuf::uint32 col_start() const;
  void set_col_start(::google::protobuf::uint32 value);

  // optional uint32 col_end = 4;
  void clear_col_end();
  static const int kColEndFieldNumber = 4;
  ::google::protobuf::uint32 col_end() const;
  void set_col_end(::google::protobuf::uint32 value);

  // optional uint32 data_len = 5;
  void clear_data_len();
  static const int kDataLenFieldNumber = 5;
  ::google::protobuf::uint32 data_len() const;
  void set_data_len(::google::protobuf::uint32 value);

  // optional bool is_string = 6;
  void clear_is_string();
  static const int kIsStringFieldNumber = 6;
  bool is_string() const;
  void set_is_string(bool value);

  // @@protoc_insertion_point(class_scope:OLEDWrite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 page_start_;
  ::google::protobuf::uint32 page_end_;
  ::google::protobuf::uint32 col_start_;
  ::google::protobuf::uint32 col_end_;
  ::google::protobuf::uint32 data_len_;
  bool is_string_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_BotRequest_2eproto();
  friend void protobuf_AssignDesc_BotRequest_2eproto();
  friend void protobuf_ShutdownFile_BotRequest_2eproto();

  void InitAsDefaultInstance();
  static OLEDWrite* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BotRequest

// optional .IMUInit imu_init = 1;
inline bool BotRequest::has_imu_init() const {
  return body_case() == kImuInit;
}
inline void BotRequest::set_has_imu_init() {
  _oneof_case_[0] = kImuInit;
}
inline void BotRequest::clear_imu_init() {
  if (has_imu_init()) {
    delete body_.imu_init_;
    clear_has_body();
  }
}
inline  const ::IMUInit& BotRequest::imu_init() const {
  // @@protoc_insertion_point(field_get:BotRequest.imu_init)
  return has_imu_init()
      ? *body_.imu_init_
      : ::IMUInit::default_instance();
}
inline ::IMUInit* BotRequest::mutable_imu_init() {
  if (!has_imu_init()) {
    clear_body();
    set_has_imu_init();
    body_.imu_init_ = new ::IMUInit;
  }
  // @@protoc_insertion_point(field_mutable:BotRequest.imu_init)
  return body_.imu_init_;
}
inline ::IMUInit* BotRequest::release_imu_init() {
  // @@protoc_insertion_point(field_release:BotRequest.imu_init)
  if (has_imu_init()) {
    clear_has_body();
    ::IMUInit* temp = body_.imu_init_;
    body_.imu_init_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotRequest::set_allocated_imu_init(::IMUInit* imu_init) {
  clear_body();
  if (imu_init) {
    set_has_imu_init();
    body_.imu_init_ = imu_init;
  }
  // @@protoc_insertion_point(field_set_allocated:BotRequest.imu_init)
}

// optional .BusRequest bus_request = 2;
inline bool BotRequest::has_bus_request() const {
  return body_case() == kBusRequest;
}
inline void BotRequest::set_has_bus_request() {
  _oneof_case_[0] = kBusRequest;
}
inline void BotRequest::clear_bus_request() {
  if (has_bus_request()) {
    delete body_.bus_request_;
    clear_has_body();
  }
}
inline  const ::BusRequest& BotRequest::bus_request() const {
  // @@protoc_insertion_point(field_get:BotRequest.bus_request)
  return has_bus_request()
      ? *body_.bus_request_
      : ::BusRequest::default_instance();
}
inline ::BusRequest* BotRequest::mutable_bus_request() {
  if (!has_bus_request()) {
    clear_body();
    set_has_bus_request();
    body_.bus_request_ = new ::BusRequest;
  }
  // @@protoc_insertion_point(field_mutable:BotRequest.bus_request)
  return body_.bus_request_;
}
inline ::BusRequest* BotRequest::release_bus_request() {
  // @@protoc_insertion_point(field_release:BotRequest.bus_request)
  if (has_bus_request()) {
    clear_has_body();
    ::BusRequest* temp = body_.bus_request_;
    body_.bus_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotRequest::set_allocated_bus_request(::BusRequest* bus_request) {
  clear_body();
  if (bus_request) {
    set_has_bus_request();
    body_.bus_request_ = bus_request;
  }
  // @@protoc_insertion_point(field_set_allocated:BotRequest.bus_request)
}

// optional .BusBaudrate bus_baudrate = 3;
inline bool BotRequest::has_bus_baudrate() const {
  return body_case() == kBusBaudrate;
}
inline void BotRequest::set_has_bus_baudrate() {
  _oneof_case_[0] = kBusBaudrate;
}
inline void BotRequest::clear_bus_baudrate() {
  if (has_bus_baudrate()) {
    delete body_.bus_baudrate_;
    clear_has_body();
  }
}
inline  const ::BusBaudrate& BotRequest::bus_baudrate() const {
  // @@protoc_insertion_point(field_get:BotRequest.bus_baudrate)
  return has_bus_baudrate()
      ? *body_.bus_baudrate_
      : ::BusBaudrate::default_instance();
}
inline ::BusBaudrate* BotRequest::mutable_bus_baudrate() {
  if (!has_bus_baudrate()) {
    clear_body();
    set_has_bus_baudrate();
    body_.bus_baudrate_ = new ::BusBaudrate;
  }
  // @@protoc_insertion_point(field_mutable:BotRequest.bus_baudrate)
  return body_.bus_baudrate_;
}
inline ::BusBaudrate* BotRequest::release_bus_baudrate() {
  // @@protoc_insertion_point(field_release:BotRequest.bus_baudrate)
  if (has_bus_baudrate()) {
    clear_has_body();
    ::BusBaudrate* temp = body_.bus_baudrate_;
    body_.bus_baudrate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotRequest::set_allocated_bus_baudrate(::BusBaudrate* bus_baudrate) {
  clear_body();
  if (bus_baudrate) {
    set_has_bus_baudrate();
    body_.bus_baudrate_ = bus_baudrate;
  }
  // @@protoc_insertion_point(field_set_allocated:BotRequest.bus_baudrate)
}

// optional .OLEDWrite oled_write = 4;
inline bool BotRequest::has_oled_write() const {
  return body_case() == kOledWrite;
}
inline void BotRequest::set_has_oled_write() {
  _oneof_case_[0] = kOledWrite;
}
inline void BotRequest::clear_oled_write() {
  if (has_oled_write()) {
    delete body_.oled_write_;
    clear_has_body();
  }
}
inline  const ::OLEDWrite& BotRequest::oled_write() const {
  // @@protoc_insertion_point(field_get:BotRequest.oled_write)
  return has_oled_write()
      ? *body_.oled_write_
      : ::OLEDWrite::default_instance();
}
inline ::OLEDWrite* BotRequest::mutable_oled_write() {
  if (!has_oled_write()) {
    clear_body();
    set_has_oled_write();
    body_.oled_write_ = new ::OLEDWrite;
  }
  // @@protoc_insertion_point(field_mutable:BotRequest.oled_write)
  return body_.oled_write_;
}
inline ::OLEDWrite* BotRequest::release_oled_write() {
  // @@protoc_insertion_point(field_release:BotRequest.oled_write)
  if (has_oled_write()) {
    clear_has_body();
    ::OLEDWrite* temp = body_.oled_write_;
    body_.oled_write_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void BotRequest::set_allocated_oled_write(::OLEDWrite* oled_write) {
  clear_body();
  if (oled_write) {
    set_has_oled_write();
    body_.oled_write_ = oled_write;
  }
  // @@protoc_insertion_point(field_set_allocated:BotRequest.oled_write)
}

inline bool BotRequest::has_body() const {
  return body_case() != BODY_NOT_SET;
}
inline void BotRequest::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
inline BotRequest::BodyCase BotRequest::body_case() const {
  return BotRequest::BodyCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// IMUInit

// optional bool self_test = 1;
inline void IMUInit::clear_self_test() {
  self_test_ = false;
}
inline bool IMUInit::self_test() const {
  // @@protoc_insertion_point(field_get:IMUInit.self_test)
  return self_test_;
}
inline void IMUInit::set_self_test(bool value) {
  
  self_test_ = value;
  // @@protoc_insertion_point(field_set:IMUInit.self_test)
}

// optional uint32 report_frequency = 2;
inline void IMUInit::clear_report_frequency() {
  report_frequency_ = 0u;
}
inline ::google::protobuf::uint32 IMUInit::report_frequency() const {
  // @@protoc_insertion_point(field_get:IMUInit.report_frequency)
  return report_frequency_;
}
inline void IMUInit::set_report_frequency(::google::protobuf::uint32 value) {
  
  report_frequency_ = value;
  // @@protoc_insertion_point(field_set:IMUInit.report_frequency)
}

// -------------------------------------------------------------------

// BusRequest

// optional uint32 bus_id = 1;
inline void BusRequest::clear_bus_id() {
  bus_id_ = 0u;
}
inline ::google::protobuf::uint32 BusRequest::bus_id() const {
  // @@protoc_insertion_point(field_get:BusRequest.bus_id)
  return bus_id_;
}
inline void BusRequest::set_bus_id(::google::protobuf::uint32 value) {
  
  bus_id_ = value;
  // @@protoc_insertion_point(field_set:BusRequest.bus_id)
}

// optional uint32 tx_len = 2;
inline void BusRequest::clear_tx_len() {
  tx_len_ = 0u;
}
inline ::google::protobuf::uint32 BusRequest::tx_len() const {
  // @@protoc_insertion_point(field_get:BusRequest.tx_len)
  return tx_len_;
}
inline void BusRequest::set_tx_len(::google::protobuf::uint32 value) {
  
  tx_len_ = value;
  // @@protoc_insertion_point(field_set:BusRequest.tx_len)
}

// optional uint32 rx_len = 3;
inline void BusRequest::clear_rx_len() {
  rx_len_ = 0u;
}
inline ::google::protobuf::uint32 BusRequest::rx_len() const {
  // @@protoc_insertion_point(field_get:BusRequest.rx_len)
  return rx_len_;
}
inline void BusRequest::set_rx_len(::google::protobuf::uint32 value) {
  
  rx_len_ = value;
  // @@protoc_insertion_point(field_set:BusRequest.rx_len)
}

// -------------------------------------------------------------------

// BusBaudrate

// optional uint32 bus_id = 1;
inline void BusBaudrate::clear_bus_id() {
  bus_id_ = 0u;
}
inline ::google::protobuf::uint32 BusBaudrate::bus_id() const {
  // @@protoc_insertion_point(field_get:BusBaudrate.bus_id)
  return bus_id_;
}
inline void BusBaudrate::set_bus_id(::google::protobuf::uint32 value) {
  
  bus_id_ = value;
  // @@protoc_insertion_point(field_set:BusBaudrate.bus_id)
}

// optional uint32 baudrate = 2;
inline void BusBaudrate::clear_baudrate() {
  baudrate_ = 0u;
}
inline ::google::protobuf::uint32 BusBaudrate::baudrate() const {
  // @@protoc_insertion_point(field_get:BusBaudrate.baudrate)
  return baudrate_;
}
inline void BusBaudrate::set_baudrate(::google::protobuf::uint32 value) {
  
  baudrate_ = value;
  // @@protoc_insertion_point(field_set:BusBaudrate.baudrate)
}

// optional .BusBaudrate.Parity parity = 3;
inline void BusBaudrate::clear_parity() {
  parity_ = 0;
}
inline ::BusBaudrate_Parity BusBaudrate::parity() const {
  // @@protoc_insertion_point(field_get:BusBaudrate.parity)
  return static_cast< ::BusBaudrate_Parity >(parity_);
}
inline void BusBaudrate::set_parity(::BusBaudrate_Parity value) {
  
  parity_ = value;
  // @@protoc_insertion_point(field_set:BusBaudrate.parity)
}

// -------------------------------------------------------------------

// OLEDWrite

// optional uint32 page_start = 1;
inline void OLEDWrite::clear_page_start() {
  page_start_ = 0u;
}
inline ::google::protobuf::uint32 OLEDWrite::page_start() const {
  // @@protoc_insertion_point(field_get:OLEDWrite.page_start)
  return page_start_;
}
inline void OLEDWrite::set_page_start(::google::protobuf::uint32 value) {
  
  page_start_ = value;
  // @@protoc_insertion_point(field_set:OLEDWrite.page_start)
}

// optional uint32 page_end = 2;
inline void OLEDWrite::clear_page_end() {
  page_end_ = 0u;
}
inline ::google::protobuf::uint32 OLEDWrite::page_end() const {
  // @@protoc_insertion_point(field_get:OLEDWrite.page_end)
  return page_end_;
}
inline void OLEDWrite::set_page_end(::google::protobuf::uint32 value) {
  
  page_end_ = value;
  // @@protoc_insertion_point(field_set:OLEDWrite.page_end)
}

// optional uint32 col_start = 3;
inline void OLEDWrite::clear_col_start() {
  col_start_ = 0u;
}
inline ::google::protobuf::uint32 OLEDWrite::col_start() const {
  // @@protoc_insertion_point(field_get:OLEDWrite.col_start)
  return col_start_;
}
inline void OLEDWrite::set_col_start(::google::protobuf::uint32 value) {
  
  col_start_ = value;
  // @@protoc_insertion_point(field_set:OLEDWrite.col_start)
}

// optional uint32 col_end = 4;
inline void OLEDWrite::clear_col_end() {
  col_end_ = 0u;
}
inline ::google::protobuf::uint32 OLEDWrite::col_end() const {
  // @@protoc_insertion_point(field_get:OLEDWrite.col_end)
  return col_end_;
}
inline void OLEDWrite::set_col_end(::google::protobuf::uint32 value) {
  
  col_end_ = value;
  // @@protoc_insertion_point(field_set:OLEDWrite.col_end)
}

// optional uint32 data_len = 5;
inline void OLEDWrite::clear_data_len() {
  data_len_ = 0u;
}
inline ::google::protobuf::uint32 OLEDWrite::data_len() const {
  // @@protoc_insertion_point(field_get:OLEDWrite.data_len)
  return data_len_;
}
inline void OLEDWrite::set_data_len(::google::protobuf::uint32 value) {
  
  data_len_ = value;
  // @@protoc_insertion_point(field_set:OLEDWrite.data_len)
}

// optional bool is_string = 6;
inline void OLEDWrite::clear_is_string() {
  is_string_ = false;
}
inline bool OLEDWrite::is_string() const {
  // @@protoc_insertion_point(field_get:OLEDWrite.is_string)
  return is_string_;
}
inline void OLEDWrite::set_is_string(bool value) {
  
  is_string_ = value;
  // @@protoc_insertion_point(field_set:OLEDWrite.is_string)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::BusBaudrate_Parity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BusBaudrate_Parity>() {
  return ::BusBaudrate_Parity_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BotRequest_2eproto__INCLUDED
